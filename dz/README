# Containers

  Stack<int> s;
  s.push(3, 1, 2, 4, 7, 5, 9, 6, 8, 0);
  s.stream(std::cout, ", ");

  OrderedList<int> l{[](const int &lhs, const int &rhs) { return lhs < rhs; }};
  l.push(3, 1, 2, 4, 7, 5, 9, 6, 8, 0);
  l.stream(std::cout, ", ");

# Trees

  Tree<int> t;
  t.push(3, 1, 2, 4, 7, 5, 9, 6, 8, 0);

  t.stream(cout, ", ", dz::DisplayMethod::PreOrder);

# Vectors & Ranges

  Vector<int> v;
  t.push(3, 1, 2, 4, 7, 5, 9, 6, 8, 0);

  for (const auto &i : v.iter()
                        .filter([](const int &i) { return 0 == i % 2; })
                        .transform([](int &i) { i *= 2; })
                        .drop(3)
                        .take(5)
                        .to_vector())
    cout << i << endl;
